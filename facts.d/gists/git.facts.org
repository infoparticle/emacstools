* config
** git ~/.gitconfig file (aliases)
Some times you may need:

[http]
    proxy = http://15.122.63.30:8080
[https]
    proxy = https://15.122.63.30:8080

#+begin_src sh
[user]
    name =  Gopinath Sadasivam
    email = gopinath-sadasivam@microfocus.com
[core]
    autocrlf = input

[receive]
    denyCurrentBranch = updateInstead

[alias]
    lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(bold black)%s%C(reset) %C(bold cyan)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(bold black)%s%C(reset) %C(cyan)- %an%C(reset)' --all
    lg = !"git lg1"
    gr = log --graph --full-history --all --color --pretty=tformat:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s%x20%x1b[33m(%an)%x1b[0m"
    l = log --oneline
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    co = checkout
    cob = checkout -b
    coo = !git fetch && git checkout
    br = branch
    brd = branch -d
    brD = branch -D
    merged = branch --merged
    dmerged = "git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
    st = status
    aa = add -A .
    cm = commit -m
    aacm = !git add -A . && git commit -m
    cp = cherry-pick
    amend = commit --amend -m
    dev = !git checkout dev && git pull origin dev
    staging = !git checkout staging && git pull origin staging
    master = !git checkout master && git pull origin
    po = push origin
    pod = push origin dev
    pos = push origin staging
    pom = push origin master
    poh = push origin HEAD
    pogm = !git push origin gh-pages && git checkout master && git pull origin master && git rebase gh-pages && git push origin master && git checkout gh-pages
    pomg = !git push origin master && git checkout gh-pages && git pull origin gh-pages && git rebase master && git push origin gh-pages && git checkout master
    plo = pull origin
    plod = pull origin dev
    plos = pull origin staging
    plom = pull origin master
    ploh = pull origin HEAD
    unstage = reset --soft HEAD^
    f = "!git ls-files | grep -i"
    grep = grep -Ii
    la = "!git config -l | grep alias | cut -c 7-"
[apply]
    whitespace = nowarn
#+end_src

* Fix

** move commit from one branch to another (cherrypick, reset --hard)

you made wrong commit to wrong banch say master instead of mybranch

#+begin_src sh
git checkout mybranch
git cherrypick mycommit_hash

git checkout master
git reset --hard HEAD~1
#+end_src
